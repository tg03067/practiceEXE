<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="sqlCommand1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>